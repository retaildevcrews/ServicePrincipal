name: Docker CI

on:
  push:
    branches:
      - main

    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'spikes/**' # Don't build the spikes unless explicitly specified

    tags:
      - v*
  
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - main

    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'spikes/**' # Don't build the spikes unless explicitly specified

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      ACR_REG_REPO_URL : serviceprincipalacrdev.azurecr.io/serviceprincipal
      TEMP_IMG_NAME    : sp_image

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Calculate Patch Verison
      uses: avakar/derive-version@v1
      with:
        file: src/Automation/CSE.Automation/version.config
      id: version
    - name: Build Container
      run: |
        GIT_HASH=$( echo ${{ github.sha }} | cut -c1-7 )
        if [[ "${{ github.event_name }}" == "push" ]]
        then
          SEMANTIC_VERSION="${{ steps.version.outputs.version }}+${GIT_HASH}"
        else
          PR_NUMBER=$(echo "${{ github.ref }}" | awk 'BEGIN { FS = "/" } ; { print $3 }')
          SEMANTIC_VERSION="${{ steps.version.outputs.version }}-beta+PR${PR_NUMBER}+${GIT_HASH}"
        fi
        # Build Image
        docker build --pull -t ${TEMP_IMG_NAME} \
                    --build-arg SEMANTIC_VERSION=${SEMANTIC_VERSION} \
                    -f src/Automation/CSE.Automation/Dockerfile src/Automation
    
    - name: Login to Azure registry
    # do not copy the actual secrets
    # do not echo secrets
    # You must add the following secrets to github repo
    #    SERVICE_PRINCIPAL_ID     - ServicePrincipal Application ID
    #    SERVICE_PRINCIPAL_SECRET - Access Secret for the ServicePrincipal
      run: |
        # Login to Azure registry
        echo "${{ secrets.SERVICE_PRINCIPAL_SECRET }}" | docker login "${ACR_REG_REPO_URL}" -u ${{ secrets.SERVICE_PRINCIPAL_ID }} --password-stdin

    - name: Docker Push
      run: |
        export GIT_HASH=$( echo ${{ github.sha }} | cut -c1-7 )
        if [[ "${{ github.event_name }}" == "push" ]]
        then
          docker tag ${TEMP_IMG_NAME} ${ACR_REG_REPO_URL}:latest
          SEMANTIC_VERSION="${{ steps.version.outputs.version }}-${GIT_HASH}"
        else
          PR_NUMBER=$(echo "${{ github.ref }}" | awk 'BEGIN { FS = "/" } ; { print $3 }')
          SEMANTIC_VERSION="${{ steps.version.outputs.version }}-beta-PR${PR_NUMBER}-${GIT_HASH}"
        fi
        docker tag ${TEMP_IMG_NAME} "${ACR_REG_REPO_URL}:${SEMANTIC_VERSION}"
        docker push ${ACR_REG_REPO_URL}
    - name: Tag Release
      if: github.event_name == 'push'
      uses: avakar/tag-and-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
